# shopt -q login_shell && echo 'Login shell' || echo 'Not login shell'
# login shell: eg. remote ssh, opening text terminal
# non-login shell: eg. subprocesses, new graphical terminal window

# [[ $- == *i* ]] && echo 'Interactive' || echo 'Not interactive'
# interative: eg. using a terminal
# non-interactive: eg. cron job

# interactive, login:
# reads /etc/profile, ~/.bash_profile or ~/.bash_login or ~/.profile
# interactive:, non-login:
# reads .bashrc

# non-interactive, login:
# if started with --login, reads profile startup files
# non-interactive, non-login:
# no startup files

# If not running login, don't do anything
shopt -q login_shell || return

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  SOURCE_DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  # LP: modified to append path correctly when SOURCE_DIR is "/"
  [[ $SOURCE != /* ]] && SOURCE="${SOURCE_DIR%\/}/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
SOURCE_DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

# save $SOURCE_DIR since it may be overwritten by sourcing other files
BASH_PROFILE_SOURCE_DIR="$SOURCE_DIR"

[ -f "$HOME/.bash_profile.before.local" ] && source "$HOME/.bash_profile.before.local" || true

# Automatically source scripts
for f in "$BASH_PROFILE_SOURCE_DIR/bash_profile/before/.bash_profile."*""; do
    [ -f "$f" ] && source "$f" || true
done

for f in "$BASH_PROFILE_SOURCE_DIR/bash_profile/.bash_profile."*""; do
    [ -f "$f" ] && source "$f" || true
done

[ -f "$HOME/.bash_profile.local" ] && source "$HOME/.bash_profile.local" || true

for f in "$BASH_PROFILE_SOURCE_DIR/bash_profile/after/.bash_profile."*""; do
    [ -f "$f" ] && source "$f" || true
done

[ -f "$HOME/.bash_profile.after.local" ] && source "$HOME/.bash_profile.after.local" || true

unset BASH_PROFILE_SOURCE_DIR
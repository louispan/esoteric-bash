# Bash aliases

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

DEFAULT_SEARCH_DIRS_IGNORE_FILE="$HOME/.search_dirs.ignore"
export SEARCH_DIRS_IGNORE_FILE="$DEFAULT_SEARCH_DIRS_IGNORE_FILE"

export CGREP_OPTIONS="-RiInH"
export CFIND_OPTIONS="-L"
export CAG_OPTIONS="--follow"

cgrep() {
    declare -a IGNORED_CGREP_DIRS
    local _SEARCH_DIRS_IGNORE_FILE=${IGNORED_SEARCH_DIRS:-"$DEFAULT_SEARCH_DIRS_IGNORE_FILE"}
    local IFS=$'\n'
    for dir in $(cat "$_SEARCH_DIRS_IGNORE_FILE" 2>/dev/null && echo "" 2>/dev/null)
    do
        if [ -n "$dir" ]; then
           IGNORED_CGREP_DIRS+=("--exclude-dir=$dir")
        fi
    done

    grep $CGREP_OPTIONS "${IGNORED_CGREP_DIRS[@]}" "$@"
}
export -f cgrep

cegrep() {
    declare -a IGNORED_CGREP_DIRS
    local _SEARCH_DIRS_IGNORE_FILE=${IGNORED_SEARCH_DIRS:-"$DEFAULT_SEARCH_DIRS_IGNORE_FILE"}
    local IFS=$'\n'
    for dir in $(cat "$_SEARCH_DIRS_IGNORE_FILE" 2>/dev/null && echo "" 2>/dev/null)
    do
        if [ -n "$dir" ]; then
           IGNORED_CGREP_DIRS[i]="--exclude-dir=$dir}"
        fi
    done

    egrep $CGREP_OPTIONS "${IGNORED_CGREP_DIRS[@]}" "$@"
}
export -f cegrep

cfind() {
    local -a __OPTIONS
    local -a __DIRS

    # populate __OPTIONS with all starting args that start with dash -
    __INDEX=0
    for var in "$@"; do
        if [[ "$var" != "-"* ]]; then
            break;
        else
            __OPTIONS[__INDEX]="$var"
            __INDEX=$((__INDEX+1))
        fi
    done
    shift $__INDEX

    # populate DIRS with all starting args that don't start with dash -
    __INDEX=0
    for var in "$@"; do
        if [[ "$var" == "-"* ]]; then
            break;
        else
            __DIRS[i]="$var"
            __INDEX=$((__INDEX+1))
        fi
    done
    shift $__INDEX

    declare -a IGNORED_CFIND_DIRS
    local _SEARCH_DIRS_IGNORE_FILE=${IGNORED_SEARCH_DIRS:-"$DEFAULT_SEARCH_DIRS_IGNORE_FILE"}
    local IFS=$'\n'
    for dir in $(cat "$_SEARCH_DIRS_IGNORE_FILE" 2>/dev/null && echo "" 2>/dev/null)
    do
        if [ -n "$dir" ]; then
          IGNORED_CFIND_DIRS+=("-not")
          IGNORED_CFIND_DIRS+=("(")
          IGNORED_CFIND_DIRS+=("-path")
          IGNORED_CFIND_DIRS+=("*/$dir/*")
          IGNORED_CFIND_DIRS+=("-prune")
          IGNORED_CFIND_DIRS+=(")")
        fi
    done

    find $CFIND_OPTIONS "${__OPTIONS[@]}" "${__DIRS[@]}" "${IGNORED_CFIND_DIRS[@]}" "$@"
}
export -f cfind

declare -a CAG_FILETYPE
# generated by `ag --list-file-types` > tmp.txt
# then using vim:
# :%s/.*\(--\S\+\)\_s\+[^-]\+\_s\+/\1:/g
export AG_FILETYPES="--actionscript:--ada:--asm:--batch:--cc:--cfmx:--clojure:--coffee:--cpp:--csharp:--css:--delphi:--elisp:--erlang:--fortran:--gettext:--go:--groovy:--haml:--haskell:--hh:--html:--ini:--jade:--java:--js:--json:--jsp:--less:--liquid:--lisp:--lua:--m4:--make:--markdown:--mason:--matlab:--mercury:--objc:--objcpp:--ocaml:--octave:--parrot:--perl:--php:--plone:--python:--rake:--rs:--ruby:--rust:--salt:--sass:--scala:--scheme:--shell:--smalltalk:--sql:--stylus:--swift:--tcl:--tex:--tt:--vala:--vb:--verilog:--vhdl:--vim:--xml:--yaml"

cag() {
    local -a __FILETYPES

    # populate __FILETYPES with all starting args that are in CAG_FILETYPE
    local __INDEX
    __INDEX=0

    IFS=':' read -a __AG_FILETYPES <<< "$AG_FILETYPES"
    re='--[:alpha:][a-zA-Z\-]+$'
    for var in "$@"; do
        if [[ ! "$var" =~ $re || -n "${__AG_FILETYPES[$var]}" ]]; then
            break;
        else
            __FILETYPE[__INDEX]="$var"
            __INDEX=$((__INDEX+1))
        fi
    done
    shift $__INDEX

    declare -a IGNORED_CAG_DIRS
    local _SEARCH_DIRS_IGNORE_FILE=${IGNORED_SEARCH_DIRS:-"$DEFAULT_SEARCH_DIRS_IGNORE_FILE"}
    local IFS=$'\n'
    for dir in $(cat "$_SEARCH_DIRS_IGNORE_FILE" 2>/dev/null && echo "" 2>/dev/null)
    do
        if [ -n "$dir" ]; then
          IGNORED_CAG_DIRS+=("--ignore")
          IGNORED_CAG_DIRS+=("$dir")
        fi
    done

    ag "${__FILETYPES[@]}" $CAG_OPTIONS "${IGNORED_CAG_DIRS[@]}" "$@"
}
export -f cag


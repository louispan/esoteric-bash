#!/usr/bin/env bash

# Get SOURCE_DIR resolving symbolic links
# http://stackoverflow.com/questions/59895/can-a-bash-script-tell-what-directory-its-stored-in/246128#246128
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  SOURCE_DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  # LP: modified to append path correctly when SOURCE_DIR is "/"
  [[ $SOURCE != /* ]] && SOURCE="${SOURCE_DIR%\/}/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
SOURCE_DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

[[ $1 == "-v" ]] && VERBOSE=-v

link() {
    if [ "$1" -ef "$2" ]; then
        [ -z "$VERBOSE" ] || echo "Already linked \"$2\" to \"$1\""
    else
        ( echo "linking \"$2\" to \"$1\"" && ln -s "$1" "$2" )
    fi
}

append_line() {
    [ -f "$2" ] || touch "$2"
    lines=$(grep -nF "$1" "$2" | sed 's/:.*//' | tr '\n' ' ')
    if [ -n "$lines" ]; then
        [ -z "$VERBOSE" ] || echo "Already appended \"$1\" to \"$2\": line $lines"
    else
        # add newline before appending
        if [ -n "$(tail -c 1 "$2")" ]; then
            echo >> "$2"
        fi
        echo "$1" >> "$2"
        echo "Appended \"$1\" to \"$2\""
    fi
}

append_source() {
    append_line "[ -f \"$1\" ] && source \"$1\" || true" "$2"
}

append_source "$SOURCE_DIR/bin/path.bash_profile" "$HOME/.bash_profile.before.local"
append_source "$SOURCE_DIR/share/.bash_profile.source" "$HOME/.bash_profile"
append_source "$SOURCE_DIR/share/.bashrc.source" "$HOME/.bashrc"

append_line "\$include $SOURCE_DIR/etc/.inputrc" "$HOME/.inputrc"

# install keychain (only if gnome-keyring is not available)
if ! type -t gnome-keyring > /dev/null; then
    if ! which keychain &> /dev/null && [ ! -e "$HOME/opt/keychain" ]; then
        mkdir -p "$HOME/opt"
        mkdir -p "$HOME/bin"
	if [ ! -e "$HOME/opt/keychain" ]; then
	    echo "hihi"
	    cd "$HOME/opt" && git clone https://github.com/funtoo/keychain.git && cd "$HOME/opt/keychain" && make
        fi
        link "$HOME/opt/keychain/keychain" "$HOME/bin/keychain"
    fi
fi

if [ ! -d "$HOME/.fzf" ]; then
    git clone --depth 1 https://github.com/junegunn/fzf.git "$HOME/.fzf"
    "$HOME/.fzf/install"
fi
